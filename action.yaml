---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# sonarqube-cloud-scan-action
name: '🔐 SonarCube Cloud Scan'
description: 'Performs a SonarQube Cloud scan and uploads the results'

# yamllint disable-line rule:line-length
# See: https://docs.sonarsource.com/sonarqube-server/latest/project-administration/analysis-scope/
# Create a file at the top of the repository called:
#   sonar-project.properties
# e.g. For Python projects, define directories for source code and tests:
# sonar.sources = src/
# sonar.tests = test/

inputs:
  # Note: types are not enforced for composite actions and fail schema checks
  # But are useful for documentation purposes and will be commented out

  # Mandatory
  sonar_token:
    description: 'SonarQube API key/token'
    required: true
    # type: string

  # Optional
  no_checkout:
    description: 'Do not checkout local repository; used for testing'
    required: false
    default: 'false'
    # type: boolean
  sonar_root_cert:
    description: 'Server root certificate PEM encoded'
    required: false
    # type: 'string'
  build_wrapper_url:
    # yamllint disable-line rule:line-length
    # e.g. https://raw.githubusercontent.com/o-ran-sc/ci-management/refs/heads/master/jjb/com-golog/prescan-golog-go-ubuntu.sh
    description: 'Download location of build wrapper/script'
    required: false
    # type: string
  build_wrapper_out_dir:
    description: 'Filesystem location of build outputs'
    required: false
    # type: string
  sonar_host_url:
    description: 'Uploads scans to the given host URL'
    required: false
    default: 'https://sonarcloud.io'
    # type: string
  lc_all:
    # yamllint disable-line rule:line-length
    description: 'Change when code character set is outside the range of en_US.UTF-8'
    required: false
    default: "en_US.UTF-8"
    # type: string
  debug:
    description: 'Enable debugging output'
    required: false
    default: 'false'
    # type: boolean

runs:
  using: 'composite'
  steps:
    - name: 'Checkout repository'
      if: inputs.no_checkout != 'true'
      # yamllint disable-line rule:line-length
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        # Disabling shallow clones is recommended
        # This improves the relevancy of reporting output
        fetch-depth: 0

    - name: 'Repository metadata'
      id: repository-metadata
      # yamllint disable-line rule:line-length
      uses: lfit/releng-reusable-workflows/.github/actions/repository-metadata-action@1d327501514102db5018642036a974e79415ec5a # v0.2.8

    - name: 'Check for SonarQube project configuration'
      id: sonar-project-properties
      # yamllint disable-line rule:line-length
      uses: lfit/releng-reusable-workflows/.github/actions/path-check-action@1d327501514102db5018642036a974e79415ec5a # v0.2.8
      with:
        path: 'sonar-project.properties'

    - name: 'Check for SonarQube project configuration'
      id: sonarcloud-properties
      # yamllint disable-line rule:line-length
      uses: lfit/releng-reusable-workflows/.github/actions/path-check-action@1d327501514102db5018642036a974e79415ec5a # v0.2.8
      with:
        path: '.sonarcloud.properties'

    # yamllint disable rule:line-length

    - name: 'Warning: missing SonarQube configuration'
      if:
        # yamllint disable-line rule:line-length
        steps.sonar-project-properties.outputs.type != 'file' && steps.sonarcloud-properties.outputs.type != 'file'
      shell: bash
      run: |
        # SonarQube configuration warning
        echo '⚠️ Repository is missing a SonarQube configuration file'
        echo 'Check the documentation for further details:'
        echo 'https://docs.sonarsource.com/sonarqube-cloud/advanced-setup/analysis-parameters/'
        echo '### ⚠️ Repository is missing a SonarQube configuration file' >> "$GITHUB_STEP_SUMMARY"
        echo 'Check the documentation for further details:' >> "$GITHUB_STEP_SUMMARY"
        echo 'https://docs.sonarsource.com/sonarqube-cloud/advanced-setup/analysis-parameters/' \
          >> "$GITHUB_STEP_SUMMARY"
        # Create an ephemeral configuration file
        echo "sonar.organization=${{ steps.repository-metadata.outputs.repository_owner }}" > sonar-project.properties
        echo "sonar.projectKey=${{ steps.repository-metadata.outputs.repository_name }}" >> sonar-project.properties
        echo 'Created: sonar-project.properties'
        echo 'Containing:'
        cat sonar-project.properties

    - name: 'SonarQube configuration present'
      # yamllint disable-line rule:line-length
      if: ${{ (steps.sonar-project-properties.outputs.type == 'file') || (steps.sonarcloud-properties.outputs.type == 'file') }}
      shell: bash
      run: |
        # SonarQube configuration present
        echo 'SonarQube configuration present ✅'
        echo '### SonarQube configuration present ✅' >> "$GITHUB_STEP_SUMMARY"

    - name: 'Download remote build script'
      if: inputs.BUILD_WRAPPER_URL != ''
      # yamllint disable-line rule:line-length
      uses: lfreleng-actions/url-download-action@ece51fd0f08fd2db2eda53b1acd06c4747336c16 # v0.1.3
      with:
        url: ${{ inputs.build_wrapper_url }}

    - name: 'Validate required input parameters'
      if: inputs.BUILD_WRAPPER_URL != ''
      shell: bash
      run: |
        # Validate required input parameters
        if [ -z "${{ inputs.build_wrapper_out_dir }}" ]; then
          echo 'Error: build outputs directory must be specified when using a build wrapper ❌'
          exit 1
        fi

    - name: 'Install build wrapper'
      if: inputs.BUILD_WRAPPER_URL != ''
      # yamllint disable-line rule:line-length
      uses: SonarSource/sonarqube-scan-action/install-build-wrapper@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0

    - name: 'Run build wrapper'
      if: inputs.BUILD_WRAPPER_URL != ''
      shell: bash
      run: |
        # Run build wrapper 🧱
        BUILD_SCRIPT="./$(basename ${{ inputs.BUILD_WRAPPER_URL }})"
        BUILD_WRAPPER_OUT_DIR="${{ inputs.build_wrapper_out_dir }}"
        chmod u+x "$BUILD_SCRIPT"
        if [ ! -d "$BUILD_WRAPPER_OUT_DIR" ]; then
          mkdir -p "$BUILD_WRAPPER_OUT_DIR"
          echo "Created build wrapper output directory: $BUILD_WRAPPER_OUT_DIR"
        fi
        echo "Running: build-wrapper-linux-x86-64 --out-dir $BUILD_WRAPPER_OUT_DIR $BUILD_SCRIPT"
        build-wrapper-linux-x86-64 --out-dir "$BUILD_WRAPPER_OUT_DIR" "$BUILD_SCRIPT"

    - name: 'Debug action/environment'
      if: inputs.debug == 'true'
      shell: bash
      run: |
        # Show local directory context
        echo "Debug logging enabled 🐞"
        echo "Current directory: $(pwd)"
        echo "GitHub workspace: ${{ github.workspace }}"
        echo "Directory content:"
        ls -la

    - name: 'SonarQube Scan'
      # yamllint disable-line rule:line-length
      uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
      env:
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
        SONAR_ROOT_CERT: ${{ inputs.sonar_root_cert }}
        SONAR_VERBOSE: ${{ inputs.debug }}
        LC_ALL: ${{ inputs.LC_ALL }}

    - name: 'Print summary/job output'
      shell: bash
      # yamllint disable rule:line-length
      run: |
        # Print summary/job output
        echo '## 🔐 SonarQube Cloud Scan Results Updated' >> "$GITHUB_STEP_SUMMARY"
        echo "🔗 https://sonarcloud.io/project/overview?id=${{ steps.repository-metadata.outputs.repository_owner }}_${{ steps.repository-metadata.outputs.repository_name }}" >> "$GITHUB_STEP_SUMMARY"
